"use strict";var map,restaurants=void 0,neighborhoods=void 0,cuisines=void 0,markers=[];function fetchNeighborhoods(){DBHelper.fetchNeighborhoods().then(function(e){self.neighborhoods=e,fillNeighborhoodsHTML()}).catch(function(e){return console.error(e)})}function fillNeighborhoodsHTML(){var e=0<arguments.length&&void 0!==arguments[0]?arguments[0]:self.neighborhoods,n=document.getElementById("neighborhoods-select");e.forEach(function(e){var t=document.createElement("option");t.innerHTML=e,t.value=e,n.append(t)})}function fetchCuisines(){DBHelper.fetchCuisines().then(function(e){self.cuisines=e,fillCuisinesHTML()}).catch(function(e){return console.error(e)})}function fillCuisinesHTML(){var e=0<arguments.length&&void 0!==arguments[0]?arguments[0]:self.cuisines,n=document.getElementById("cuisines-select");e.forEach(function(e){var t=document.createElement("option");t.innerHTML=e,t.value=e,n.append(t)})}function updateRestaurants(){var e=document.getElementById("cuisines-select"),t=document.getElementById("neighborhoods-select"),n=e.selectedIndex,a=t.selectedIndex,r=e[n].value,s=t[a].value;DBHelper.fetchRestaurantByCuisineAndNeighborhood(r,s).then(function(e){resetRestaurants(e),fillRestaurantsHTML()}).catch(function(e){return console.error(e)})}function resetRestaurants(e){self.restaurants=[],document.getElementById("restaurants-list").innerHTML="",self.markers.forEach(function(e){return e.setMap(null)}),self.markers=[],self.restaurants=e}function fillRestaurantsHTML(){var e=0<arguments.length&&void 0!==arguments[0]?arguments[0]:self.restaurants,n=document.getElementById("restaurants-list"),a=[];e.forEach(function(t){a.push(getRestaurantRating(t).then(function(e){t.rating=e,n.append(createRestaurantHTML(t))}))}),Promise.all(a).then(function(){addMarkersToMap(),enableLazyLoading()})}function createRestaurantHTML(e){var t="true"==e.is_favorite?'<span title="Favorite" style="position:absolute;color:yellow;font-size:30px;">‚≠ê </span>':"",n=DBHelper.imageUrlForRestaurant(e).replace(/\.[^/.]+$/,""),a="jpg",r=document.createElement("li");return r.innerHTML='\n\t<a href="'+DBHelper.urlForRestaurant(e)+'" aria-label="'+e.name+'">\n\t\t<figure>'+t+'\n\t\t\t<picture>\n\t\t\t\t<source class="lazy"  media="(max-width: 600px)"  data-srcset="'+n+"-400."+a+" 400w, "+n+"-800."+a+' 800w"\n\t\t\t\t\t\tsizes="100vw"></source>\n\t\t\t\t<source class="lazy"  media="(max-width: 960px)"  data-srcset="'+n+"-400."+a+" 400w, "+n+"-800."+a+' 800w"\n\t\t\t\t\t\tsizes="50vw"></source>\n\t\t\t\t<source class="lazy"  media="(min-width: 960px)"  data-srcset="'+n+"-400."+a+" 400w, "+n+"-800."+a+' 800w"\n\t\t\t\t\t\tsizes="360px"></source>\n\t\t\t\t<img class="lazy" src="placeholder-image.jpg" data-src="'+n+"-800."+a+'" alt="'+e.name+"'s restaurant photo\">\n\t\t\t</picture>\n\t\t\t<figcaption>\n\t\t\t\t<h1>"+e.name+' <span class="pull-right rating"><i class="material-icons" aria-label="Average rating">favorite</i>'+e.rating+'</span></h1>\n\t\t\t\t<p>\n\t\t\t\t\t<span><i class="material-icons" aria-label="Cuisine Type">restaurant_menu</i>'+e.cuisine_type+'</span>\n\t\t\t\t\t<span class="pull-right"><i class="material-icons" aria-label="Neighborhood">location_on</i>'+e.neighborhood+"</span>\n\t\t\t\t</p>\n\t\t\t</figcaption>\n\t\t</figure>\n\t</a>",r}function getRestaurantRating(e){return DBHelper.fetchReviews(e.id).then(function(e){var t=10*e.reduce(function(e,t){return e+t.rating},0);return Math.round(t/e.length,1)/10})}function addMarkersToMap(){var e=0<arguments.length&&void 0!==arguments[0]?arguments[0]:self.restaurants;self.map&&e&&e.forEach(function(e){var t=DBHelper.mapMarkerForRestaurant(e,self.map);google.maps.event.addListener(t,"click",function(){window.location.href=t.url}),self.markers.push(t)})}function enableLazyLoading(){var e=[].slice.call(document.querySelectorAll(".lazy"));if("IntersectionObserver"in window){var n=new IntersectionObserver(function(e,t){e.forEach(function(e){if(e.isIntersecting){var t=e.target;t.src=t.dataset.src,t.srcset=t.dataset.srcset,t.classList.remove("lazy"),n.unobserve(t)}})});e.forEach(function(e){return n.observe(e)})}}document.addEventListener("DOMContentLoaded",function(e){fetchNeighborhoods(),fetchCuisines(),updateRestaurants()}),window.initMap=function(){self.map=new google.maps.Map(document.getElementById("map"),{zoom:12,center:{lat:40.722216,lng:-73.987501}}),addMarkersToMap(),google.maps.event.addListener(self.map,"tilesloaded",function(e){[].slice.call(document.querySelectorAll("img:not([alt])")).forEach(function(e){e.alt||(e.alt="")})})};
//# sourceMappingURL=data:application/json;charset=utf8;base64,
