"use strict";var map,restaurants=void 0,neighborhoods=void 0,cuisines=void 0,markers=[];function fetchNeighborhoods(){DBHelper.fetchNeighborhoods().then(function(t){self.neighborhoods=t,fillNeighborhoodsHTML()}).catch(function(t){return console.error(t)})}function fillNeighborhoodsHTML(){var t=0<arguments.length&&void 0!==arguments[0]?arguments[0]:self.neighborhoods,n=document.getElementById("neighborhoods-select");t.forEach(function(t){var e=document.createElement("option");e.innerHTML=t,e.value=t,n.append(e)})}function fetchCuisines(){DBHelper.fetchCuisines().then(function(t){self.cuisines=t,fillCuisinesHTML()}).catch(function(t){return console.error(t)})}function fillCuisinesHTML(){var t=0<arguments.length&&void 0!==arguments[0]?arguments[0]:self.cuisines,n=document.getElementById("cuisines-select");t.forEach(function(t){var e=document.createElement("option");e.innerHTML=t,e.value=t,n.append(e)})}function updateRestaurants(){var t=document.getElementById("cuisines-select"),e=document.getElementById("neighborhoods-select"),n=t.selectedIndex,r=e.selectedIndex,a=t[n].value,s=e[r].value;DBHelper.fetchRestaurantByCuisineAndNeighborhood(a,s).then(function(t){resetRestaurants(t),fillRestaurantsHTML()}).catch(function(t){return console.error(t)})}function resetRestaurants(t){self.restaurants=[],document.getElementById("restaurants-list").innerHTML="",self.markers.forEach(function(t){return t.setMap(null)}),self.markers=[],self.restaurants=t}function fillRestaurantsHTML(){var t=0<arguments.length&&void 0!==arguments[0]?arguments[0]:self.restaurants,e=document.getElementById("restaurants-list");t.forEach(function(t){e.append(createRestaurantHTML(t))}),addMarkersToMap()}function createRestaurantHTML(t){t.rating=getRestaurantRating(t);var e=DBHelper.imageUrlForRestaurant(t).replace(/\.[^/.]+$/,""),n=DBHelper.imageUrlForRestaurant(t).split(".").pop(),r=document.createElement("li");return r.innerHTML='\n\t\t<a href="'+DBHelper.urlForRestaurant(t)+'" aria-label="'+t.name+'">\n\t\t\t<figure>\n\t\t\t\t<picture>\n\t\t\t\t\t<source media="(max-width: 600px)" srcset="'+e+"-400."+n+" 400w, "+e+"-800."+n+' 800w"\n\t\t\t\t\t\t\tsizes="100vw"></source>\n\t\t\t\t\t<source media="(max-width: 960px)" srcset="'+e+"-400."+n+" 400w, "+e+"-800."+n+' 800w"\n\t\t\t\t\t\t\tsizes="50vw"></source>\n\t\t\t\t\t<source media="(min-width: 960px)" srcset="'+e+"-400."+n+" 400w, "+e+"-800."+n+' 800w"\n\t\t\t\t\t\t\tsizes="360px"></source>\n\t\t\t\t\t<img src="'+e+"-800."+n+'" alt="'+t.name+"'s restaurant photo\">\n\t\t\t\t</picture>\n\t\t\t\t<figcaption>\n\t\t\t\t\t<h1>"+t.name+' <span class="pull-right icon ion-android-favorite" aria-label="Average rating">'+t.rating+'</span></h1>\n\t\t\t\t\t<p>\n\t\t\t\t\t\t<span class="icon ion-android-restaurant" aria-label="Cuisine Type">'+t.cuisine_type+'</span>\n\t\t\t\t\t\t<span class="icon ion-location pull-right" aria-label="Neighborhood">'+t.neighborhood+"</span>\n\t\t\t\t\t</p>\n\t\t\t\t</figcaption>\n\t\t\t</figure>\n\t\t</a>",r}function getRestaurantRating(t){var e=10*t.reviews.reduce(function(t,e){return t+e.rating},0);return Math.round(e/t.reviews.length,1)/10}function addMarkersToMap(){var t=0<arguments.length&&void 0!==arguments[0]?arguments[0]:self.restaurants;self.map&&t.forEach(function(t){var e=DBHelper.mapMarkerForRestaurant(t,self.map);google.maps.event.addListener(e,"click",function(){window.location.href=e.url}),self.markers.push(e)})}document.addEventListener("DOMContentLoaded",function(t){fetchNeighborhoods(),fetchCuisines(),updateRestaurants()}),window.initMap=function(){self.map=new google.maps.Map(document.getElementById("map"),{zoom:12,center:{lat:40.722216,lng:-73.987501}}),addMarkersToMap()};
//# sourceMappingURL=data:application/json;charset=utf8;base64,
